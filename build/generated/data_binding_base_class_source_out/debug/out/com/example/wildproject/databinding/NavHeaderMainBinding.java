// Generated by view binder compiler. Do not edit!
package com.example.wildproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wildproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.tankery.lib.circularseekbar.CircularSeekBar;

public final class NavHeaderMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CircularSeekBar csbDistanceBike;

  @NonNull
  public final CircularSeekBar csbDistanceRun;

  @NonNull
  public final CircularSeekBar csbDistanceSkate;

  @NonNull
  public final CircularSeekBar csbRunsBike;

  @NonNull
  public final CircularSeekBar csbRunsRun;

  @NonNull
  public final CircularSeekBar csbRunsSkate;

  @NonNull
  public final CardView cvLevelBike;

  @NonNull
  public final CardView cvLevelRun;

  @NonNull
  public final CardView cvLevelSkate;

  @NonNull
  public final CardView cviLevelBike;

  @NonNull
  public final CardView cviLevelRun;

  @NonNull
  public final CardView cviLevelSkate;

  @NonNull
  public final ImageView ivLebelBike;

  @NonNull
  public final ImageView ivLebelRun;

  @NonNull
  public final ImageView ivLebelSkate;

  @NonNull
  public final LinearLayout lyNavLevelBike;

  @NonNull
  public final LinearLayout lyNavLevelRun;

  @NonNull
  public final LinearLayout lyNavLevelSkate;

  @NonNull
  public final LinearLayout lyNavLevels;

  @NonNull
  public final LinearLayout navHeader;

  @NonNull
  public final RelativeLayout rlDataLebelBike;

  @NonNull
  public final RelativeLayout rlDataLebelRun;

  @NonNull
  public final RelativeLayout rlDataLebelRuns;

  @NonNull
  public final TextView tbBikeDistanceLabel;

  @NonNull
  public final TextView tbRunDistanceLabel;

  @NonNull
  public final TextView tbSkateDistanceLabel;

  @NonNull
  public final RelativeLayout tvHeaderLevelBike;

  @NonNull
  public final RelativeLayout tvHeaderLevelRun;

  @NonNull
  public final RelativeLayout tvHeaderLevelSkate;

  @NonNull
  public final TextView tvHi;

  @NonNull
  public final TextView tvNumberLevelBike;

  @NonNull
  public final TextView tvNumberLevelRun;

  @NonNull
  public final TextView tvNumberLevelSkate;

  @NonNull
  public final TextView tvTotalDistance;

  @NonNull
  public final TextView tvTotalDistanceBike;

  @NonNull
  public final TextView tvTotalDistanceRun;

  @NonNull
  public final TextView tvTotalRunsBike;

  @NonNull
  public final TextView tvTotalRunsLabel;

  @NonNull
  public final TextView tvTotalRunsLabelBike;

  @NonNull
  public final TextView tvTotalRunsLabelRun;

  @NonNull
  public final TextView tvTotalRunsRun;

  @NonNull
  public final TextView tvTotalRunsSkate;

  @NonNull
  public final TextView tvTotalTimeBike;

  @NonNull
  public final TextView tvTotalTimeRun;

  @NonNull
  public final TextView tvTotalTimeSkate;

  @NonNull
  public final TextView tvUser;

  private NavHeaderMainBinding(@NonNull LinearLayout rootView,
      @NonNull CircularSeekBar csbDistanceBike, @NonNull CircularSeekBar csbDistanceRun,
      @NonNull CircularSeekBar csbDistanceSkate, @NonNull CircularSeekBar csbRunsBike,
      @NonNull CircularSeekBar csbRunsRun, @NonNull CircularSeekBar csbRunsSkate,
      @NonNull CardView cvLevelBike, @NonNull CardView cvLevelRun, @NonNull CardView cvLevelSkate,
      @NonNull CardView cviLevelBike, @NonNull CardView cviLevelRun,
      @NonNull CardView cviLevelSkate, @NonNull ImageView ivLebelBike,
      @NonNull ImageView ivLebelRun, @NonNull ImageView ivLebelSkate,
      @NonNull LinearLayout lyNavLevelBike, @NonNull LinearLayout lyNavLevelRun,
      @NonNull LinearLayout lyNavLevelSkate, @NonNull LinearLayout lyNavLevels,
      @NonNull LinearLayout navHeader, @NonNull RelativeLayout rlDataLebelBike,
      @NonNull RelativeLayout rlDataLebelRun, @NonNull RelativeLayout rlDataLebelRuns,
      @NonNull TextView tbBikeDistanceLabel, @NonNull TextView tbRunDistanceLabel,
      @NonNull TextView tbSkateDistanceLabel, @NonNull RelativeLayout tvHeaderLevelBike,
      @NonNull RelativeLayout tvHeaderLevelRun, @NonNull RelativeLayout tvHeaderLevelSkate,
      @NonNull TextView tvHi, @NonNull TextView tvNumberLevelBike,
      @NonNull TextView tvNumberLevelRun, @NonNull TextView tvNumberLevelSkate,
      @NonNull TextView tvTotalDistance, @NonNull TextView tvTotalDistanceBike,
      @NonNull TextView tvTotalDistanceRun, @NonNull TextView tvTotalRunsBike,
      @NonNull TextView tvTotalRunsLabel, @NonNull TextView tvTotalRunsLabelBike,
      @NonNull TextView tvTotalRunsLabelRun, @NonNull TextView tvTotalRunsRun,
      @NonNull TextView tvTotalRunsSkate, @NonNull TextView tvTotalTimeBike,
      @NonNull TextView tvTotalTimeRun, @NonNull TextView tvTotalTimeSkate,
      @NonNull TextView tvUser) {
    this.rootView = rootView;
    this.csbDistanceBike = csbDistanceBike;
    this.csbDistanceRun = csbDistanceRun;
    this.csbDistanceSkate = csbDistanceSkate;
    this.csbRunsBike = csbRunsBike;
    this.csbRunsRun = csbRunsRun;
    this.csbRunsSkate = csbRunsSkate;
    this.cvLevelBike = cvLevelBike;
    this.cvLevelRun = cvLevelRun;
    this.cvLevelSkate = cvLevelSkate;
    this.cviLevelBike = cviLevelBike;
    this.cviLevelRun = cviLevelRun;
    this.cviLevelSkate = cviLevelSkate;
    this.ivLebelBike = ivLebelBike;
    this.ivLebelRun = ivLebelRun;
    this.ivLebelSkate = ivLebelSkate;
    this.lyNavLevelBike = lyNavLevelBike;
    this.lyNavLevelRun = lyNavLevelRun;
    this.lyNavLevelSkate = lyNavLevelSkate;
    this.lyNavLevels = lyNavLevels;
    this.navHeader = navHeader;
    this.rlDataLebelBike = rlDataLebelBike;
    this.rlDataLebelRun = rlDataLebelRun;
    this.rlDataLebelRuns = rlDataLebelRuns;
    this.tbBikeDistanceLabel = tbBikeDistanceLabel;
    this.tbRunDistanceLabel = tbRunDistanceLabel;
    this.tbSkateDistanceLabel = tbSkateDistanceLabel;
    this.tvHeaderLevelBike = tvHeaderLevelBike;
    this.tvHeaderLevelRun = tvHeaderLevelRun;
    this.tvHeaderLevelSkate = tvHeaderLevelSkate;
    this.tvHi = tvHi;
    this.tvNumberLevelBike = tvNumberLevelBike;
    this.tvNumberLevelRun = tvNumberLevelRun;
    this.tvNumberLevelSkate = tvNumberLevelSkate;
    this.tvTotalDistance = tvTotalDistance;
    this.tvTotalDistanceBike = tvTotalDistanceBike;
    this.tvTotalDistanceRun = tvTotalDistanceRun;
    this.tvTotalRunsBike = tvTotalRunsBike;
    this.tvTotalRunsLabel = tvTotalRunsLabel;
    this.tvTotalRunsLabelBike = tvTotalRunsLabelBike;
    this.tvTotalRunsLabelRun = tvTotalRunsLabelRun;
    this.tvTotalRunsRun = tvTotalRunsRun;
    this.tvTotalRunsSkate = tvTotalRunsSkate;
    this.tvTotalTimeBike = tvTotalTimeBike;
    this.tvTotalTimeRun = tvTotalTimeRun;
    this.tvTotalTimeSkate = tvTotalTimeSkate;
    this.tvUser = tvUser;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NavHeaderMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NavHeaderMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nav_header_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NavHeaderMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.csbDistanceBike;
      CircularSeekBar csbDistanceBike = ViewBindings.findChildViewById(rootView, id);
      if (csbDistanceBike == null) {
        break missingId;
      }

      id = R.id.csbDistanceRun;
      CircularSeekBar csbDistanceRun = ViewBindings.findChildViewById(rootView, id);
      if (csbDistanceRun == null) {
        break missingId;
      }

      id = R.id.csbDistanceSkate;
      CircularSeekBar csbDistanceSkate = ViewBindings.findChildViewById(rootView, id);
      if (csbDistanceSkate == null) {
        break missingId;
      }

      id = R.id.csbRunsBike;
      CircularSeekBar csbRunsBike = ViewBindings.findChildViewById(rootView, id);
      if (csbRunsBike == null) {
        break missingId;
      }

      id = R.id.csbRunsRun;
      CircularSeekBar csbRunsRun = ViewBindings.findChildViewById(rootView, id);
      if (csbRunsRun == null) {
        break missingId;
      }

      id = R.id.csbRunsSkate;
      CircularSeekBar csbRunsSkate = ViewBindings.findChildViewById(rootView, id);
      if (csbRunsSkate == null) {
        break missingId;
      }

      id = R.id.cvLevelBike;
      CardView cvLevelBike = ViewBindings.findChildViewById(rootView, id);
      if (cvLevelBike == null) {
        break missingId;
      }

      id = R.id.cvLevelRun;
      CardView cvLevelRun = ViewBindings.findChildViewById(rootView, id);
      if (cvLevelRun == null) {
        break missingId;
      }

      id = R.id.cvLevelSkate;
      CardView cvLevelSkate = ViewBindings.findChildViewById(rootView, id);
      if (cvLevelSkate == null) {
        break missingId;
      }

      id = R.id.cviLevelBike;
      CardView cviLevelBike = ViewBindings.findChildViewById(rootView, id);
      if (cviLevelBike == null) {
        break missingId;
      }

      id = R.id.cviLevelRun;
      CardView cviLevelRun = ViewBindings.findChildViewById(rootView, id);
      if (cviLevelRun == null) {
        break missingId;
      }

      id = R.id.cviLevelSkate;
      CardView cviLevelSkate = ViewBindings.findChildViewById(rootView, id);
      if (cviLevelSkate == null) {
        break missingId;
      }

      id = R.id.ivLebelBike;
      ImageView ivLebelBike = ViewBindings.findChildViewById(rootView, id);
      if (ivLebelBike == null) {
        break missingId;
      }

      id = R.id.ivLebelRun;
      ImageView ivLebelRun = ViewBindings.findChildViewById(rootView, id);
      if (ivLebelRun == null) {
        break missingId;
      }

      id = R.id.ivLebelSkate;
      ImageView ivLebelSkate = ViewBindings.findChildViewById(rootView, id);
      if (ivLebelSkate == null) {
        break missingId;
      }

      id = R.id.lyNavLevelBike;
      LinearLayout lyNavLevelBike = ViewBindings.findChildViewById(rootView, id);
      if (lyNavLevelBike == null) {
        break missingId;
      }

      id = R.id.lyNavLevelRun;
      LinearLayout lyNavLevelRun = ViewBindings.findChildViewById(rootView, id);
      if (lyNavLevelRun == null) {
        break missingId;
      }

      id = R.id.lyNavLevelSkate;
      LinearLayout lyNavLevelSkate = ViewBindings.findChildViewById(rootView, id);
      if (lyNavLevelSkate == null) {
        break missingId;
      }

      id = R.id.lyNav_levels;
      LinearLayout lyNavLevels = ViewBindings.findChildViewById(rootView, id);
      if (lyNavLevels == null) {
        break missingId;
      }

      LinearLayout navHeader = (LinearLayout) rootView;

      id = R.id.rlDataLebelBike;
      RelativeLayout rlDataLebelBike = ViewBindings.findChildViewById(rootView, id);
      if (rlDataLebelBike == null) {
        break missingId;
      }

      id = R.id.rlDataLebelRun;
      RelativeLayout rlDataLebelRun = ViewBindings.findChildViewById(rootView, id);
      if (rlDataLebelRun == null) {
        break missingId;
      }

      id = R.id.rlDataLebelRuns;
      RelativeLayout rlDataLebelRuns = ViewBindings.findChildViewById(rootView, id);
      if (rlDataLebelRuns == null) {
        break missingId;
      }

      id = R.id.tbBikeDistanceLabel;
      TextView tbBikeDistanceLabel = ViewBindings.findChildViewById(rootView, id);
      if (tbBikeDistanceLabel == null) {
        break missingId;
      }

      id = R.id.tbRunDistanceLabel;
      TextView tbRunDistanceLabel = ViewBindings.findChildViewById(rootView, id);
      if (tbRunDistanceLabel == null) {
        break missingId;
      }

      id = R.id.tbSkateDistanceLabel;
      TextView tbSkateDistanceLabel = ViewBindings.findChildViewById(rootView, id);
      if (tbSkateDistanceLabel == null) {
        break missingId;
      }

      id = R.id.tvHeaderLevelBike;
      RelativeLayout tvHeaderLevelBike = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderLevelBike == null) {
        break missingId;
      }

      id = R.id.tvHeaderLevelRun;
      RelativeLayout tvHeaderLevelRun = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderLevelRun == null) {
        break missingId;
      }

      id = R.id.tvHeaderLevelSkate;
      RelativeLayout tvHeaderLevelSkate = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderLevelSkate == null) {
        break missingId;
      }

      id = R.id.tvHi;
      TextView tvHi = ViewBindings.findChildViewById(rootView, id);
      if (tvHi == null) {
        break missingId;
      }

      id = R.id.tvNumberLevelBike;
      TextView tvNumberLevelBike = ViewBindings.findChildViewById(rootView, id);
      if (tvNumberLevelBike == null) {
        break missingId;
      }

      id = R.id.tvNumberLevelRun;
      TextView tvNumberLevelRun = ViewBindings.findChildViewById(rootView, id);
      if (tvNumberLevelRun == null) {
        break missingId;
      }

      id = R.id.tvNumberLevelSkate;
      TextView tvNumberLevelSkate = ViewBindings.findChildViewById(rootView, id);
      if (tvNumberLevelSkate == null) {
        break missingId;
      }

      id = R.id.tvTotalDistance;
      TextView tvTotalDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalDistance == null) {
        break missingId;
      }

      id = R.id.tvTotalDistanceBike;
      TextView tvTotalDistanceBike = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalDistanceBike == null) {
        break missingId;
      }

      id = R.id.tvTotalDistanceRun;
      TextView tvTotalDistanceRun = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalDistanceRun == null) {
        break missingId;
      }

      id = R.id.tvTotalRunsBike;
      TextView tvTotalRunsBike = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalRunsBike == null) {
        break missingId;
      }

      id = R.id.tvTotalRunsLabel;
      TextView tvTotalRunsLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalRunsLabel == null) {
        break missingId;
      }

      id = R.id.tvTotalRunsLabelBike;
      TextView tvTotalRunsLabelBike = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalRunsLabelBike == null) {
        break missingId;
      }

      id = R.id.tvTotalRunsLabelRun;
      TextView tvTotalRunsLabelRun = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalRunsLabelRun == null) {
        break missingId;
      }

      id = R.id.tvTotalRunsRun;
      TextView tvTotalRunsRun = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalRunsRun == null) {
        break missingId;
      }

      id = R.id.tvTotalRunsSkate;
      TextView tvTotalRunsSkate = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalRunsSkate == null) {
        break missingId;
      }

      id = R.id.tvTotalTimeBike;
      TextView tvTotalTimeBike = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalTimeBike == null) {
        break missingId;
      }

      id = R.id.tvTotalTimeRun;
      TextView tvTotalTimeRun = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalTimeRun == null) {
        break missingId;
      }

      id = R.id.tvTotalTimeSkate;
      TextView tvTotalTimeSkate = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalTimeSkate == null) {
        break missingId;
      }

      id = R.id.tvUser;
      TextView tvUser = ViewBindings.findChildViewById(rootView, id);
      if (tvUser == null) {
        break missingId;
      }

      return new NavHeaderMainBinding((LinearLayout) rootView, csbDistanceBike, csbDistanceRun,
          csbDistanceSkate, csbRunsBike, csbRunsRun, csbRunsSkate, cvLevelBike, cvLevelRun,
          cvLevelSkate, cviLevelBike, cviLevelRun, cviLevelSkate, ivLebelBike, ivLebelRun,
          ivLebelSkate, lyNavLevelBike, lyNavLevelRun, lyNavLevelSkate, lyNavLevels, navHeader,
          rlDataLebelBike, rlDataLebelRun, rlDataLebelRuns, tbBikeDistanceLabel, tbRunDistanceLabel,
          tbSkateDistanceLabel, tvHeaderLevelBike, tvHeaderLevelRun, tvHeaderLevelSkate, tvHi,
          tvNumberLevelBike, tvNumberLevelRun, tvNumberLevelSkate, tvTotalDistance,
          tvTotalDistanceBike, tvTotalDistanceRun, tvTotalRunsBike, tvTotalRunsLabel,
          tvTotalRunsLabelBike, tvTotalRunsLabelRun, tvTotalRunsRun, tvTotalRunsSkate,
          tvTotalTimeBike, tvTotalTimeRun, tvTotalTimeSkate, tvUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
