// Generated by view binder compiler. Do not edit!
package com.example.wildproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wildproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardRunBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView itemRecord;

  @NonNull
  public final ImageView ivHeaderMedalAvgSpeed;

  @NonNull
  public final ImageView ivHeaderMedalDistance;

  @NonNull
  public final ImageView ivHeaderMedalMaxSpeed;

  @NonNull
  public final ImageView ivHeaderOpenClose;

  @NonNull
  public final ImageView ivMedalAvgSpeed;

  @NonNull
  public final ImageView ivMedalDistance;

  @NonNull
  public final ImageView ivMedalMaxSpeed;

  @NonNull
  public final ImageView ivPicture;

  @NonNull
  public final ImageView ivSportSelected;

  @NonNull
  public final LinearLayout lyAvgSpeedDataRun;

  @NonNull
  public final LinearLayout lyChallengeDistance;

  @NonNull
  public final LinearLayout lyChallengeDistanceRun;

  @NonNull
  public final LinearLayout lyChallengeDurationRun;

  @NonNull
  public final LinearLayout lyDataDate;

  @NonNull
  public final LinearLayout lyDataDateSport;

  @NonNull
  public final LinearLayout lyDataDistance;

  @NonNull
  public final LinearLayout lyDataRun;

  @NonNull
  public final LinearLayout lyDataRunBody;

  @NonNull
  public final LinearLayout lyDataRunBodyContainer;

  @NonNull
  public final LinearLayout lyDataRunHeader;

  @NonNull
  public final LinearLayout lyDataSpeedMedals;

  @NonNull
  public final LinearLayout lyDate;

  @NonNull
  public final LinearLayout lyDistance;

  @NonNull
  public final LinearLayout lyDistanceData;

  @NonNull
  public final LinearLayout lyDuration;

  @NonNull
  public final LinearLayout lyIntervalRun;

  @NonNull
  public final LinearLayout lyMaxSpeedRun;

  @NonNull
  public final LinearLayout lyMaxUnevennessRun;

  @NonNull
  public final LinearLayout lyMedalAvgSpeed;

  @NonNull
  public final LinearLayout lyMedalDistance;

  @NonNull
  public final LinearLayout lyMedalMaxSpeed;

  @NonNull
  public final LinearLayout lyMedalsRun;

  @NonNull
  public final LinearLayout lyMinUnevennessRun;

  @NonNull
  public final LinearLayout lyPicture;

  @NonNull
  public final LinearLayout lySpeeds;

  @NonNull
  public final LinearLayout lySport;

  @NonNull
  public final LinearLayout lyUnevennessDataRun;

  @NonNull
  public final LinearLayout lyUnevennessRun;

  @NonNull
  public final TextView tvAvgSpeedRun;

  @NonNull
  public final TextView tvAvgSpeedRunUX;

  @NonNull
  public final TextView tvAvgSpeedTitle;

  @NonNull
  public final TextView tvChallengeDistanceRun;

  @NonNull
  public final TextView tvChallengeDistanceRunUX;

  @NonNull
  public final TextView tvChallengeDistanceTitle;

  @NonNull
  public final TextView tvChallengeDurationRun;

  @NonNull
  public final TextView tvChallengeTitle;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDelete;

  @NonNull
  public final TextView tvDistanceRun;

  @NonNull
  public final TextView tvDistanceRunUX;

  @NonNull
  public final TextView tvDistanceTitle;

  @NonNull
  public final TextView tvDurationRun;

  @NonNull
  public final TextView tvDurationTitle;

  @NonNull
  public final TextView tvHeaderAvgSpeed;

  @NonNull
  public final TextView tvHeaderDate;

  @NonNull
  public final TextView tvHeaderDistance;

  @NonNull
  public final TextView tvHeaderDuration;

  @NonNull
  public final TextView tvIntervalRun;

  @NonNull
  public final TextView tvIntervalTitle;

  @NonNull
  public final TextView tvMaxSpeedRun;

  @NonNull
  public final TextView tvMaxSpeedRunUX;

  @NonNull
  public final TextView tvMaxSpeedTitle;

  @NonNull
  public final TextView tvMaxUnevennessRun;

  @NonNull
  public final TextView tvMaxUnevennessUX;

  @NonNull
  public final TextView tvMedalAvgSpeedTitle;

  @NonNull
  public final TextView tvMedalDistanceTitle;

  @NonNull
  public final TextView tvMedalMaxSpeedTitle;

  @NonNull
  public final TextView tvMinUnevennessRun;

  @NonNull
  public final TextView tvMinUnevennessUX;

  @NonNull
  public final TextView tvPlay;

  @NonNull
  public final TextView tvStartTime;

  @NonNull
  public final TextView tvUnevennessTitle;

  private CardRunBinding(@NonNull CardView rootView, @NonNull CardView itemRecord,
      @NonNull ImageView ivHeaderMedalAvgSpeed, @NonNull ImageView ivHeaderMedalDistance,
      @NonNull ImageView ivHeaderMedalMaxSpeed, @NonNull ImageView ivHeaderOpenClose,
      @NonNull ImageView ivMedalAvgSpeed, @NonNull ImageView ivMedalDistance,
      @NonNull ImageView ivMedalMaxSpeed, @NonNull ImageView ivPicture,
      @NonNull ImageView ivSportSelected, @NonNull LinearLayout lyAvgSpeedDataRun,
      @NonNull LinearLayout lyChallengeDistance, @NonNull LinearLayout lyChallengeDistanceRun,
      @NonNull LinearLayout lyChallengeDurationRun, @NonNull LinearLayout lyDataDate,
      @NonNull LinearLayout lyDataDateSport, @NonNull LinearLayout lyDataDistance,
      @NonNull LinearLayout lyDataRun, @NonNull LinearLayout lyDataRunBody,
      @NonNull LinearLayout lyDataRunBodyContainer, @NonNull LinearLayout lyDataRunHeader,
      @NonNull LinearLayout lyDataSpeedMedals, @NonNull LinearLayout lyDate,
      @NonNull LinearLayout lyDistance, @NonNull LinearLayout lyDistanceData,
      @NonNull LinearLayout lyDuration, @NonNull LinearLayout lyIntervalRun,
      @NonNull LinearLayout lyMaxSpeedRun, @NonNull LinearLayout lyMaxUnevennessRun,
      @NonNull LinearLayout lyMedalAvgSpeed, @NonNull LinearLayout lyMedalDistance,
      @NonNull LinearLayout lyMedalMaxSpeed, @NonNull LinearLayout lyMedalsRun,
      @NonNull LinearLayout lyMinUnevennessRun, @NonNull LinearLayout lyPicture,
      @NonNull LinearLayout lySpeeds, @NonNull LinearLayout lySport,
      @NonNull LinearLayout lyUnevennessDataRun, @NonNull LinearLayout lyUnevennessRun,
      @NonNull TextView tvAvgSpeedRun, @NonNull TextView tvAvgSpeedRunUX,
      @NonNull TextView tvAvgSpeedTitle, @NonNull TextView tvChallengeDistanceRun,
      @NonNull TextView tvChallengeDistanceRunUX, @NonNull TextView tvChallengeDistanceTitle,
      @NonNull TextView tvChallengeDurationRun, @NonNull TextView tvChallengeTitle,
      @NonNull TextView tvDate, @NonNull TextView tvDelete, @NonNull TextView tvDistanceRun,
      @NonNull TextView tvDistanceRunUX, @NonNull TextView tvDistanceTitle,
      @NonNull TextView tvDurationRun, @NonNull TextView tvDurationTitle,
      @NonNull TextView tvHeaderAvgSpeed, @NonNull TextView tvHeaderDate,
      @NonNull TextView tvHeaderDistance, @NonNull TextView tvHeaderDuration,
      @NonNull TextView tvIntervalRun, @NonNull TextView tvIntervalTitle,
      @NonNull TextView tvMaxSpeedRun, @NonNull TextView tvMaxSpeedRunUX,
      @NonNull TextView tvMaxSpeedTitle, @NonNull TextView tvMaxUnevennessRun,
      @NonNull TextView tvMaxUnevennessUX, @NonNull TextView tvMedalAvgSpeedTitle,
      @NonNull TextView tvMedalDistanceTitle, @NonNull TextView tvMedalMaxSpeedTitle,
      @NonNull TextView tvMinUnevennessRun, @NonNull TextView tvMinUnevennessUX,
      @NonNull TextView tvPlay, @NonNull TextView tvStartTime,
      @NonNull TextView tvUnevennessTitle) {
    this.rootView = rootView;
    this.itemRecord = itemRecord;
    this.ivHeaderMedalAvgSpeed = ivHeaderMedalAvgSpeed;
    this.ivHeaderMedalDistance = ivHeaderMedalDistance;
    this.ivHeaderMedalMaxSpeed = ivHeaderMedalMaxSpeed;
    this.ivHeaderOpenClose = ivHeaderOpenClose;
    this.ivMedalAvgSpeed = ivMedalAvgSpeed;
    this.ivMedalDistance = ivMedalDistance;
    this.ivMedalMaxSpeed = ivMedalMaxSpeed;
    this.ivPicture = ivPicture;
    this.ivSportSelected = ivSportSelected;
    this.lyAvgSpeedDataRun = lyAvgSpeedDataRun;
    this.lyChallengeDistance = lyChallengeDistance;
    this.lyChallengeDistanceRun = lyChallengeDistanceRun;
    this.lyChallengeDurationRun = lyChallengeDurationRun;
    this.lyDataDate = lyDataDate;
    this.lyDataDateSport = lyDataDateSport;
    this.lyDataDistance = lyDataDistance;
    this.lyDataRun = lyDataRun;
    this.lyDataRunBody = lyDataRunBody;
    this.lyDataRunBodyContainer = lyDataRunBodyContainer;
    this.lyDataRunHeader = lyDataRunHeader;
    this.lyDataSpeedMedals = lyDataSpeedMedals;
    this.lyDate = lyDate;
    this.lyDistance = lyDistance;
    this.lyDistanceData = lyDistanceData;
    this.lyDuration = lyDuration;
    this.lyIntervalRun = lyIntervalRun;
    this.lyMaxSpeedRun = lyMaxSpeedRun;
    this.lyMaxUnevennessRun = lyMaxUnevennessRun;
    this.lyMedalAvgSpeed = lyMedalAvgSpeed;
    this.lyMedalDistance = lyMedalDistance;
    this.lyMedalMaxSpeed = lyMedalMaxSpeed;
    this.lyMedalsRun = lyMedalsRun;
    this.lyMinUnevennessRun = lyMinUnevennessRun;
    this.lyPicture = lyPicture;
    this.lySpeeds = lySpeeds;
    this.lySport = lySport;
    this.lyUnevennessDataRun = lyUnevennessDataRun;
    this.lyUnevennessRun = lyUnevennessRun;
    this.tvAvgSpeedRun = tvAvgSpeedRun;
    this.tvAvgSpeedRunUX = tvAvgSpeedRunUX;
    this.tvAvgSpeedTitle = tvAvgSpeedTitle;
    this.tvChallengeDistanceRun = tvChallengeDistanceRun;
    this.tvChallengeDistanceRunUX = tvChallengeDistanceRunUX;
    this.tvChallengeDistanceTitle = tvChallengeDistanceTitle;
    this.tvChallengeDurationRun = tvChallengeDurationRun;
    this.tvChallengeTitle = tvChallengeTitle;
    this.tvDate = tvDate;
    this.tvDelete = tvDelete;
    this.tvDistanceRun = tvDistanceRun;
    this.tvDistanceRunUX = tvDistanceRunUX;
    this.tvDistanceTitle = tvDistanceTitle;
    this.tvDurationRun = tvDurationRun;
    this.tvDurationTitle = tvDurationTitle;
    this.tvHeaderAvgSpeed = tvHeaderAvgSpeed;
    this.tvHeaderDate = tvHeaderDate;
    this.tvHeaderDistance = tvHeaderDistance;
    this.tvHeaderDuration = tvHeaderDuration;
    this.tvIntervalRun = tvIntervalRun;
    this.tvIntervalTitle = tvIntervalTitle;
    this.tvMaxSpeedRun = tvMaxSpeedRun;
    this.tvMaxSpeedRunUX = tvMaxSpeedRunUX;
    this.tvMaxSpeedTitle = tvMaxSpeedTitle;
    this.tvMaxUnevennessRun = tvMaxUnevennessRun;
    this.tvMaxUnevennessUX = tvMaxUnevennessUX;
    this.tvMedalAvgSpeedTitle = tvMedalAvgSpeedTitle;
    this.tvMedalDistanceTitle = tvMedalDistanceTitle;
    this.tvMedalMaxSpeedTitle = tvMedalMaxSpeedTitle;
    this.tvMinUnevennessRun = tvMinUnevennessRun;
    this.tvMinUnevennessUX = tvMinUnevennessUX;
    this.tvPlay = tvPlay;
    this.tvStartTime = tvStartTime;
    this.tvUnevennessTitle = tvUnevennessTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardRunBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardRunBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_run, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardRunBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView itemRecord = (CardView) rootView;

      id = R.id.ivHeaderMedalAvgSpeed;
      ImageView ivHeaderMedalAvgSpeed = ViewBindings.findChildViewById(rootView, id);
      if (ivHeaderMedalAvgSpeed == null) {
        break missingId;
      }

      id = R.id.ivHeaderMedalDistance;
      ImageView ivHeaderMedalDistance = ViewBindings.findChildViewById(rootView, id);
      if (ivHeaderMedalDistance == null) {
        break missingId;
      }

      id = R.id.ivHeaderMedalMaxSpeed;
      ImageView ivHeaderMedalMaxSpeed = ViewBindings.findChildViewById(rootView, id);
      if (ivHeaderMedalMaxSpeed == null) {
        break missingId;
      }

      id = R.id.ivHeaderOpenClose;
      ImageView ivHeaderOpenClose = ViewBindings.findChildViewById(rootView, id);
      if (ivHeaderOpenClose == null) {
        break missingId;
      }

      id = R.id.ivMedalAvgSpeed;
      ImageView ivMedalAvgSpeed = ViewBindings.findChildViewById(rootView, id);
      if (ivMedalAvgSpeed == null) {
        break missingId;
      }

      id = R.id.ivMedalDistance;
      ImageView ivMedalDistance = ViewBindings.findChildViewById(rootView, id);
      if (ivMedalDistance == null) {
        break missingId;
      }

      id = R.id.ivMedalMaxSpeed;
      ImageView ivMedalMaxSpeed = ViewBindings.findChildViewById(rootView, id);
      if (ivMedalMaxSpeed == null) {
        break missingId;
      }

      id = R.id.ivPicture;
      ImageView ivPicture = ViewBindings.findChildViewById(rootView, id);
      if (ivPicture == null) {
        break missingId;
      }

      id = R.id.ivSportSelected;
      ImageView ivSportSelected = ViewBindings.findChildViewById(rootView, id);
      if (ivSportSelected == null) {
        break missingId;
      }

      id = R.id.lyAvgSpeedDataRun;
      LinearLayout lyAvgSpeedDataRun = ViewBindings.findChildViewById(rootView, id);
      if (lyAvgSpeedDataRun == null) {
        break missingId;
      }

      id = R.id.lyChallengeDistance;
      LinearLayout lyChallengeDistance = ViewBindings.findChildViewById(rootView, id);
      if (lyChallengeDistance == null) {
        break missingId;
      }

      id = R.id.lyChallengeDistanceRun;
      LinearLayout lyChallengeDistanceRun = ViewBindings.findChildViewById(rootView, id);
      if (lyChallengeDistanceRun == null) {
        break missingId;
      }

      id = R.id.lyChallengeDurationRun;
      LinearLayout lyChallengeDurationRun = ViewBindings.findChildViewById(rootView, id);
      if (lyChallengeDurationRun == null) {
        break missingId;
      }

      id = R.id.lyDataDate;
      LinearLayout lyDataDate = ViewBindings.findChildViewById(rootView, id);
      if (lyDataDate == null) {
        break missingId;
      }

      id = R.id.lyDataDateSport;
      LinearLayout lyDataDateSport = ViewBindings.findChildViewById(rootView, id);
      if (lyDataDateSport == null) {
        break missingId;
      }

      id = R.id.lyDataDistance;
      LinearLayout lyDataDistance = ViewBindings.findChildViewById(rootView, id);
      if (lyDataDistance == null) {
        break missingId;
      }

      id = R.id.lyDataRun;
      LinearLayout lyDataRun = ViewBindings.findChildViewById(rootView, id);
      if (lyDataRun == null) {
        break missingId;
      }

      id = R.id.lyDataRunBody;
      LinearLayout lyDataRunBody = ViewBindings.findChildViewById(rootView, id);
      if (lyDataRunBody == null) {
        break missingId;
      }

      id = R.id.lyDataRunBodyContainer;
      LinearLayout lyDataRunBodyContainer = ViewBindings.findChildViewById(rootView, id);
      if (lyDataRunBodyContainer == null) {
        break missingId;
      }

      id = R.id.lyDataRunHeader;
      LinearLayout lyDataRunHeader = ViewBindings.findChildViewById(rootView, id);
      if (lyDataRunHeader == null) {
        break missingId;
      }

      id = R.id.lyDataSpeedMedals;
      LinearLayout lyDataSpeedMedals = ViewBindings.findChildViewById(rootView, id);
      if (lyDataSpeedMedals == null) {
        break missingId;
      }

      id = R.id.lyDate;
      LinearLayout lyDate = ViewBindings.findChildViewById(rootView, id);
      if (lyDate == null) {
        break missingId;
      }

      id = R.id.lyDistance;
      LinearLayout lyDistance = ViewBindings.findChildViewById(rootView, id);
      if (lyDistance == null) {
        break missingId;
      }

      id = R.id.lyDistanceData;
      LinearLayout lyDistanceData = ViewBindings.findChildViewById(rootView, id);
      if (lyDistanceData == null) {
        break missingId;
      }

      id = R.id.lyDuration;
      LinearLayout lyDuration = ViewBindings.findChildViewById(rootView, id);
      if (lyDuration == null) {
        break missingId;
      }

      id = R.id.lyIntervalRun;
      LinearLayout lyIntervalRun = ViewBindings.findChildViewById(rootView, id);
      if (lyIntervalRun == null) {
        break missingId;
      }

      id = R.id.lyMaxSpeedRun;
      LinearLayout lyMaxSpeedRun = ViewBindings.findChildViewById(rootView, id);
      if (lyMaxSpeedRun == null) {
        break missingId;
      }

      id = R.id.lyMaxUnevennessRun;
      LinearLayout lyMaxUnevennessRun = ViewBindings.findChildViewById(rootView, id);
      if (lyMaxUnevennessRun == null) {
        break missingId;
      }

      id = R.id.lyMedalAvgSpeed;
      LinearLayout lyMedalAvgSpeed = ViewBindings.findChildViewById(rootView, id);
      if (lyMedalAvgSpeed == null) {
        break missingId;
      }

      id = R.id.lyMedalDistance;
      LinearLayout lyMedalDistance = ViewBindings.findChildViewById(rootView, id);
      if (lyMedalDistance == null) {
        break missingId;
      }

      id = R.id.lyMedalMaxSpeed;
      LinearLayout lyMedalMaxSpeed = ViewBindings.findChildViewById(rootView, id);
      if (lyMedalMaxSpeed == null) {
        break missingId;
      }

      id = R.id.lyMedalsRun;
      LinearLayout lyMedalsRun = ViewBindings.findChildViewById(rootView, id);
      if (lyMedalsRun == null) {
        break missingId;
      }

      id = R.id.lyMinUnevennessRun;
      LinearLayout lyMinUnevennessRun = ViewBindings.findChildViewById(rootView, id);
      if (lyMinUnevennessRun == null) {
        break missingId;
      }

      id = R.id.lyPicture;
      LinearLayout lyPicture = ViewBindings.findChildViewById(rootView, id);
      if (lyPicture == null) {
        break missingId;
      }

      id = R.id.lySpeeds;
      LinearLayout lySpeeds = ViewBindings.findChildViewById(rootView, id);
      if (lySpeeds == null) {
        break missingId;
      }

      id = R.id.lySport;
      LinearLayout lySport = ViewBindings.findChildViewById(rootView, id);
      if (lySport == null) {
        break missingId;
      }

      id = R.id.lyUnevennessDataRun;
      LinearLayout lyUnevennessDataRun = ViewBindings.findChildViewById(rootView, id);
      if (lyUnevennessDataRun == null) {
        break missingId;
      }

      id = R.id.lyUnevennessRun;
      LinearLayout lyUnevennessRun = ViewBindings.findChildViewById(rootView, id);
      if (lyUnevennessRun == null) {
        break missingId;
      }

      id = R.id.tvAvgSpeedRun;
      TextView tvAvgSpeedRun = ViewBindings.findChildViewById(rootView, id);
      if (tvAvgSpeedRun == null) {
        break missingId;
      }

      id = R.id.tvAvgSpeedRunUX;
      TextView tvAvgSpeedRunUX = ViewBindings.findChildViewById(rootView, id);
      if (tvAvgSpeedRunUX == null) {
        break missingId;
      }

      id = R.id.tvAvgSpeedTitle;
      TextView tvAvgSpeedTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAvgSpeedTitle == null) {
        break missingId;
      }

      id = R.id.tvChallengeDistanceRun;
      TextView tvChallengeDistanceRun = ViewBindings.findChildViewById(rootView, id);
      if (tvChallengeDistanceRun == null) {
        break missingId;
      }

      id = R.id.tvChallengeDistanceRunUX;
      TextView tvChallengeDistanceRunUX = ViewBindings.findChildViewById(rootView, id);
      if (tvChallengeDistanceRunUX == null) {
        break missingId;
      }

      id = R.id.tvChallengeDistanceTitle;
      TextView tvChallengeDistanceTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvChallengeDistanceTitle == null) {
        break missingId;
      }

      id = R.id.tvChallengeDurationRun;
      TextView tvChallengeDurationRun = ViewBindings.findChildViewById(rootView, id);
      if (tvChallengeDurationRun == null) {
        break missingId;
      }

      id = R.id.tvChallengeTitle;
      TextView tvChallengeTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvChallengeTitle == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvDelete;
      TextView tvDelete = ViewBindings.findChildViewById(rootView, id);
      if (tvDelete == null) {
        break missingId;
      }

      id = R.id.tvDistanceRun;
      TextView tvDistanceRun = ViewBindings.findChildViewById(rootView, id);
      if (tvDistanceRun == null) {
        break missingId;
      }

      id = R.id.tvDistanceRunUX;
      TextView tvDistanceRunUX = ViewBindings.findChildViewById(rootView, id);
      if (tvDistanceRunUX == null) {
        break missingId;
      }

      id = R.id.tvDistanceTitle;
      TextView tvDistanceTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDistanceTitle == null) {
        break missingId;
      }

      id = R.id.tvDurationRun;
      TextView tvDurationRun = ViewBindings.findChildViewById(rootView, id);
      if (tvDurationRun == null) {
        break missingId;
      }

      id = R.id.tvDurationTitle;
      TextView tvDurationTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDurationTitle == null) {
        break missingId;
      }

      id = R.id.tvHeaderAvgSpeed;
      TextView tvHeaderAvgSpeed = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderAvgSpeed == null) {
        break missingId;
      }

      id = R.id.tvHeaderDate;
      TextView tvHeaderDate = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderDate == null) {
        break missingId;
      }

      id = R.id.tvHeaderDistance;
      TextView tvHeaderDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderDistance == null) {
        break missingId;
      }

      id = R.id.tvHeaderDuration;
      TextView tvHeaderDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderDuration == null) {
        break missingId;
      }

      id = R.id.tvIntervalRun;
      TextView tvIntervalRun = ViewBindings.findChildViewById(rootView, id);
      if (tvIntervalRun == null) {
        break missingId;
      }

      id = R.id.tvIntervalTitle;
      TextView tvIntervalTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvIntervalTitle == null) {
        break missingId;
      }

      id = R.id.tvMaxSpeedRun;
      TextView tvMaxSpeedRun = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxSpeedRun == null) {
        break missingId;
      }

      id = R.id.tvMaxSpeedRunUX;
      TextView tvMaxSpeedRunUX = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxSpeedRunUX == null) {
        break missingId;
      }

      id = R.id.tvMaxSpeedTitle;
      TextView tvMaxSpeedTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxSpeedTitle == null) {
        break missingId;
      }

      id = R.id.tvMaxUnevennessRun;
      TextView tvMaxUnevennessRun = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxUnevennessRun == null) {
        break missingId;
      }

      id = R.id.tvMaxUnevennessUX;
      TextView tvMaxUnevennessUX = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxUnevennessUX == null) {
        break missingId;
      }

      id = R.id.tvMedalAvgSpeedTitle;
      TextView tvMedalAvgSpeedTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvMedalAvgSpeedTitle == null) {
        break missingId;
      }

      id = R.id.tvMedalDistanceTitle;
      TextView tvMedalDistanceTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvMedalDistanceTitle == null) {
        break missingId;
      }

      id = R.id.tvMedalMaxSpeedTitle;
      TextView tvMedalMaxSpeedTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvMedalMaxSpeedTitle == null) {
        break missingId;
      }

      id = R.id.tvMinUnevennessRun;
      TextView tvMinUnevennessRun = ViewBindings.findChildViewById(rootView, id);
      if (tvMinUnevennessRun == null) {
        break missingId;
      }

      id = R.id.tvMinUnevennessUX;
      TextView tvMinUnevennessUX = ViewBindings.findChildViewById(rootView, id);
      if (tvMinUnevennessUX == null) {
        break missingId;
      }

      id = R.id.tvPlay;
      TextView tvPlay = ViewBindings.findChildViewById(rootView, id);
      if (tvPlay == null) {
        break missingId;
      }

      id = R.id.tvStartTime;
      TextView tvStartTime = ViewBindings.findChildViewById(rootView, id);
      if (tvStartTime == null) {
        break missingId;
      }

      id = R.id.tvUnevennessTitle;
      TextView tvUnevennessTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvUnevennessTitle == null) {
        break missingId;
      }

      return new CardRunBinding((CardView) rootView, itemRecord, ivHeaderMedalAvgSpeed,
          ivHeaderMedalDistance, ivHeaderMedalMaxSpeed, ivHeaderOpenClose, ivMedalAvgSpeed,
          ivMedalDistance, ivMedalMaxSpeed, ivPicture, ivSportSelected, lyAvgSpeedDataRun,
          lyChallengeDistance, lyChallengeDistanceRun, lyChallengeDurationRun, lyDataDate,
          lyDataDateSport, lyDataDistance, lyDataRun, lyDataRunBody, lyDataRunBodyContainer,
          lyDataRunHeader, lyDataSpeedMedals, lyDate, lyDistance, lyDistanceData, lyDuration,
          lyIntervalRun, lyMaxSpeedRun, lyMaxUnevennessRun, lyMedalAvgSpeed, lyMedalDistance,
          lyMedalMaxSpeed, lyMedalsRun, lyMinUnevennessRun, lyPicture, lySpeeds, lySport,
          lyUnevennessDataRun, lyUnevennessRun, tvAvgSpeedRun, tvAvgSpeedRunUX, tvAvgSpeedTitle,
          tvChallengeDistanceRun, tvChallengeDistanceRunUX, tvChallengeDistanceTitle,
          tvChallengeDurationRun, tvChallengeTitle, tvDate, tvDelete, tvDistanceRun,
          tvDistanceRunUX, tvDistanceTitle, tvDurationRun, tvDurationTitle, tvHeaderAvgSpeed,
          tvHeaderDate, tvHeaderDistance, tvHeaderDuration, tvIntervalRun, tvIntervalTitle,
          tvMaxSpeedRun, tvMaxSpeedRunUX, tvMaxSpeedTitle, tvMaxUnevennessRun, tvMaxUnevennessUX,
          tvMedalAvgSpeedTitle, tvMedalDistanceTitle, tvMedalMaxSpeedTitle, tvMinUnevennessRun,
          tvMinUnevennessUX, tvPlay, tvStartTime, tvUnevennessTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
